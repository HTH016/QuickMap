<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Statistics">
	
	<select id="statisticsUserGrade" parameterType="int" resultType="int">
		select count(*) from qm_user
		where grade_id=#{grade} 
	</select>
	
	<select id="statisticsOfficeGrade" parameterType="int" resultType="int"> 
		select count(*)
		from qm_office o, qm_user u
		where   o.user_id = u.user_id
		    and u.grade_id = 3
		    and o.grade_id = #{grade}
	</select>
	
	<select id="statisticsOfficeAd" resultType="int"> 
		select count(*)
		from qm_office o, qm_ad_request a
		where   o.office_id = a.office_id
		    and a.ad_request_start &lt; sysdate
		    and sysdate &lt; a.ad_request_end
	</select>
	
	<select id="statisticsAdIncome" resultType="statistics.StatisticsAdIncomeDTO" parameterType="java.util.Map"> 
		select sum(len) s, ad_request_level 
   from (select to_number((least(L1, L2, L3, L4)) + abs(least(L1, L2, L3, L4)))/2 len, ad_request_level
      from ( select (to_date(#{end, jdbcType=VARCHAR}, 'YYYY-MM-DD') - ad_request_start)+1 L1, 
    (to_date(#{end, jdbcType=VARCHAR}, 'YYYY-MM-DD') - to_date(#{start, jdbcType=VARCHAR}, 'YYYY-MM-DD'))+1 L2, 
    ( ad_request_end - to_date(#{start, jdbcType=VARCHAR}, 'YYYY-MM-DD'))+1 L3, 
    ( ad_request_end - ad_request_start)+1 L4, ad_request_level
    from qm_ad_request))
    group by ad_request_level
    order by ad_request_level asc
	</select>
	
	<select id="statisticsSearchWord" resultType="statistics.StatisticsSearchDTO" parameterType="java.util.Map">
		select search_word, rank() over( order by count desc ) rank, count 
		from (
			select search_word, count
			from (
				select search_word, count(search_word) count
				from qm_statistics_search
				where   #{start} &lt;= search_date
        			and search_date &lt;= #{end}
 				group by search_word
 				)
 			)
	</select>
	
	<select id="insertStatisticsSearch"  parameterType="statistics.StatisticsSearchDTO" resultType="int">
		insert into qm_statistics_search (user_id, search_word, search_class, search_date)
		values (#{user_id, jdbcType=VARCHAR}, #{search_word}, #{search_class}, sysdate)
	</select>	
	
	<select id="insertStatisticsDetail"  parameterType="statistics.StatisticsDetailDTO" resultType="int">
		insert into qm_statistics_detail (user_id, office_id, detail_date)
		values (#{user_id, jdbcType=VARCHAR}, #{office_id}, sysdate)
	</select>	
	
	<select id="statisticsDetail" resultType="statistics.StatisticsDetailDTO" parameterType="java.util.Map">
		<!--  
		select to_char( detail_date, 'YYYY-MM-DD') detail_date, count(*) count from qm_statistics_detail
	       where detail_date
	       between to_date(#{start},'YYYY-MM-DD') and to_date(#{end},'YYYY-MM-DD')
	       and office_id = to_number(#{office_id, jdbcType=VARCHAR}, '99999')
	       group by detail_date
	       order by detail_date asc
	       -->

		SELECT TO_CHAR(b.dt, 'YYYY-MM-DD') AS detail_date, NVL(SUM(a.cnt), 0) count
		FROM
			(
			SELECT TO_CHAR(detail_date, 'YYYY-MM-DD') AS detail_date, COUNT(*) cnt
			FROM qm_statistics_detail
			WHERE   detail_date BETWEEN TO_DATE(#{start}, 'YYYY-MM-DD')
				AND TO_DATE(#{end}, 'YYYY-MM-DD') 
				<!--  and office_id = #{office_id, jdbcType=VARCHAR} -->
			GROUP BY detail_date
			) a,
			(
			SELECT TO_DATE(#{start},'YYYY-MM-DD') + LEVEL - 1 AS dt
			FROM dual 
			CONNECT BY LEVEL &lt;= (TO_DATE(#{end},'YYYY-MM-DD') 
									- TO_DATE(#{start},'YYYY-MM-DD') + 1)
			) b
			WHERE b.dt = a.detail_date(+)
			GROUP BY b.dt
		ORDER BY b.dt
	</select>
	
	<select id="statisticsFavorite" resultType="statistics.StatisticsFavoriteDTO" parameterType="java.util.Map">
	
		<!--  
		select to_char( favorite_reg, 'YYYY-MM-DD') favorite_reg, count(*) count from qm_favorite
        where favorite_reg
        between to_date(#{start},'YYYY-MM-DD') and to_date(#{end},'YYYY-MM-DD')
        and office_id = to_number(#{office_id, jdbcType=VARCHAR}, '99999')
        group by favorite_reg
        order by favorite_reg asc
        -->

		SELECT TO_CHAR(b.dt, 'YYYY-MM-DD') AS favorite_reg, NVL(SUM(a.cnt), 0) count
		FROM
			(
			SELECT TO_CHAR(favorite_reg, 'YYYY-MM-DD') AS favorite_reg, COUNT(*) cnt
			FROM qm_favorite
			WHERE   favorite_reg BETWEEN TO_DATE(#{start}, 'YYYY-MM-DD')
				AND TO_DATE(#{end}, 'YYYY-MM-DD') 
				<!--  and office_id = #{office_id, jdbcType=VARCHAR} -->
			GROUP BY favorite_reg
			) a,
			(
			SELECT TO_DATE(#{start},'YYYY-MM-DD') + LEVEL - 1 AS dt
			FROM dual 
			CONNECT BY LEVEL &lt;= (TO_DATE(#{end},'YYYY-MM-DD') 
									- TO_DATE(#{start},'YYYY-MM-DD') + 1)
			) b
		WHERE b.dt = a.favorite_reg(+)
		GROUP BY b.dt
		ORDER BY b.dt
	</select>
	

	
	<select id="statisticsReview" resultType="statistics.StatisticsReviewDTO" parameterType="java.util.Map">
		<!--  
		select to_char( review_reg, 'YYYY-MM-DD') review_reg, count(*) count from qm_review
        where review_reg
        between to_date(#{start},'YYYY-MM-DD') and to_date(#{end},'YYYY-MM-DD')
        and office_id = to_number(#{office_id, jdbcType=VARCHAR}, '99999')
        group by review_reg
        order by review_reg asc
		-->

		 SELECT TO_CHAR(b.dt, 'YYYY-MM-DD') AS review_reg
     , NVL(SUM(a.cnt), 0) count
  FROM ( SELECT TO_CHAR(review_reg, 'YYYY-MM-DD') AS review_reg
              , COUNT(*) cnt
           FROM qm_review
          WHERE review_reg BETWEEN TO_DATE(#{start}, 'YYYY-MM-DD')
                             AND TO_DATE(#{end}, 'YYYY-MM-DD') 
                             <!--  and office_id = #{office_id, jdbcType=VARCHAR} -->
          GROUP BY review_reg
        ) a
      , ( SELECT TO_DATE(#{start},'YYYY-MM-DD') + LEVEL - 1 AS dt
            FROM dual 
         CONNECT BY LEVEL &lt;= (TO_DATE(#{end},'YYYY-MM-DD') 
                            - TO_DATE(#{start},'YYYY-MM-DD') + 1)
        ) b
  WHERE b.dt = a.review_reg(+)
  GROUP BY b.dt
  ORDER BY b.dt
	</select>
	
	<select id="statisticsOfficeAdHistory" resultType="statistics.StatisticsAdDTO" parameterType="int">
		select ad_request_id, ad_request_start, ad_request_end, ad_request_level
 		from qm_ad_request
 		where ad_request_confirm is not null
 		and office_id = #{office_id}
	</select>

</mapper>

